<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>CategoryCollection</title>
    <url>/2023/06/11/CategoryCollection/</url>
    <content><![CDATA[<span id="more"></span>]]></content>
      <categories>
        <category>Game Engine</category>
        <category>Others</category>
        <category>Game Engine Development</category>
        <category>Unity</category>
        <category>闲谈</category>
        <category>SnowyArk</category>
        <category>URP</category>
        <category>技术随笔</category>
        <category>HDRP</category>
        <category>SnowyOwl</category>
        <category>Unreal</category>
        <category>Piccolo</category>
        <category>Unreal/SnowyFalcon</category>
        <category>GPU Programming</category>
        <category>Graphics API</category>
        <category>OpenGL</category>
        <category>Vulkan</category>
        <category>DirectX 11</category>
        <category>DirectX 12</category>
        <category>Rendering</category>
        <category>CUDA</category>
        <category>DCC</category>
        <category>3ds Max</category>
        <category>Blender</category>
        <category>PCG</category>
        <category>Houdini</category>
        <category>Substance Designer</category>
      </categories>
  </entry>
  <entry>
    <title>Hello world!</title>
    <url>/2023/06/11/HelloWorld/</url>
    <content><![CDATA[<p>花有重开日, 人无再少年.</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::cout &lt;&lt; std::format(<span class="string">&quot;Hello world!&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<p><img src="/2023/06/11/HelloWorld/../HelloWorld/image.jpg" alt="HelloWorld"></p>
]]></content>
      <categories>
        <category>Others</category>
        <category>闲谈</category>
      </categories>
      <tags>
        <tag>闲谈</tag>
      </tags>
  </entry>
  <entry>
    <title>SnowyArkEngine开发笔记[0x00]: 写在最前</title>
    <url>/2023/06/12/SnowyArkEngine%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B00x00/</url>
    <content><![CDATA[<span id="more"></span>]]></content>
      <categories>
        <category>Game Engine Development</category>
        <category>SnowyArk</category>
      </categories>
      <tags>
        <tag>Game Engine Development</tag>
        <tag>SnowyArk Engine</tag>
        <tag>Rendering</tag>
        <tag>Vulkan</tag>
        <tag>C++</tag>
        <tag>HLSL</tag>
      </tags>
  </entry>
  <entry>
    <title>为美好的URP献上解析[0x00]: 管线架构</title>
    <url>/2023/06/12/%E4%B8%BA%E7%BE%8E%E5%A5%BD%E7%9A%84URP%E7%8C%AE%E4%B8%8A%E8%A7%A3%E6%9E%900x00/</url>
    <content><![CDATA[<span id="more"></span>]]></content>
      <categories>
        <category>Game Engine</category>
        <category>Unity</category>
        <category>URP</category>
      </categories>
      <tags>
        <tag>Rendering</tag>
        <tag>HLSL</tag>
        <tag>Unity</tag>
        <tag>URP</tag>
        <tag>C#</tag>
      </tags>
  </entry>
  <entry>
    <title>建站记录</title>
    <url>/2023/06/12/%E5%BB%BA%E7%AB%99%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<p>建这个网站的初衷是因为自己知乎被连续封了几次, 以至于让我对这类非可控的平台产生了大量不信任感, 再加之我个人的知乎账号掺杂了大量的非技术相关内容, 所以尽管我在知乎也写了一些技术文章, 但仍并不方便将来贴在简历上.<br>总总原因驱使下, 在综合考量了<strong>云服务器+Wordpress</strong>和<strong>GitHubPages+Hexo</strong>两种方案后, 我还是选择了更为轻便的后者, 毕竟对我而言只是需要一个发布文章与随想的、完全可控的平台罢了, 没必要去折腾什么服务器.<br>技术选型到此为止, 剩下的便是具体实现了. 这篇文章便是用来记录我的建站流程以及踩到的一些小坑.<br><strong>顺便一提, 这个网站就叫作SnowyLakeSide好了, 中文名雪之湖畔, 一个独属于我(SnowyLake&#x2F;雪湖)、面向互联网的小小浅滩.</strong></p>
<span id="more"></span>

<h1 id="Github-Pages创建"><a href="#Github-Pages创建" class="headerlink" title="Github Pages创建"></a>Github Pages创建</h1><p>这一步非常简单, 其实本质就是创建一个名为 snowylake.github.io 的repo, 只是要求前缀与github用户名相同. 创建之后实际上我们就已经可以通过repo名访问网站了, 但应该是空空如也的.<br>然后就可以暂时放在这里不管了, 甚至都不需要clone到本地.</p>
<h1 id="应用Hexo框架本地搭建部署环境"><a href="#应用Hexo框架本地搭建部署环境" class="headerlink" title="应用Hexo框架本地搭建部署环境"></a>应用Hexo框架本地搭建部署环境</h1><p>Hexo是一个基于Github Pages的博客发布工具, 支持Markdown, 功能简洁而强大, 生态繁荣插件众多, 久经验证, 是基于Github Pages建站的不二之选.</p>
<h2 id="安装与初始化"><a href="#安装与初始化" class="headerlink" title="安装与初始化"></a>安装与初始化</h2><p>在安装Hexo之前, 还是需要先装一个Node.js才行: <a href="https://nodejs.org/zh-cn/download">https://nodejs.org/zh-cn/download</a><br>装好之后进入命令行安装Hexo:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">npm install -g hexo</span></span><br></pre></td></tr></table></figure>
<p>本地创建一个文件夹用来部署Hexo和存放网站内容, cd进去初始化Hexo:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> D:/Workspace/Blog</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hexo init</span></span><br></pre></td></tr></table></figure>
<p>初始化之后的文件结构大概是这样的:(下图已经是生成完毕后的工程目录了)<br><img src="/2023/06/12/%E5%BB%BA%E7%AB%99%E8%AE%B0%E5%BD%95/../%E5%BB%BA%E7%AB%99%E8%AE%B0%E5%BD%95/image.png" alt="Alt text"><br>几个比较重要的部分:</p>
<ul>
<li>.deploy_git: 最终生成的github repo</li>
<li>node_modules: 通过npm安装的各种包</li>
<li>public: 生成的网页文件夹</li>
<li>scaffolds: 创建新博客用的模板</li>
<li>source: 网站实际内容, 以md的格式保存, 通过这个文件夹去生成public</li>
<li>_config.yml: Hexo的配置文件, 各种设置都需要在这里开启</li>
</ul>
<h2 id="生成与推送"><a href="#生成与推送" class="headerlink" title="生成与推送"></a>生成与推送</h2><p>第一次初始化的时候hexo已经帮我们写了一篇名为Hello World的文章, 不过这里还是尝试自己创建一篇.<br>首先在_config文件中配置网站的基础内容:</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">雪之湖畔-SnowyLakeSide</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">&#x27;Before it begins, the war we all fear.&#x27;</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">&#x27;Graphics Developer, Talk Artist.&#x27;</span></span><br><span class="line"><span class="attr">keywords:</span> <span class="string">&quot;&quot;</span> <span class="comment">#貌似没用?</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">SnowyLake</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">&#x27;Asia/Shanghai&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 自己网站的地址</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">http://snowylake.net</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">git@github.com:SnowyLake/snowylake.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure>
<p>在开始正式创建网页时, 还需要装两个包:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-renderer-marked --save</span><br><span class="line">$ npm install hexo-relative-link --save</span><br></pre></td></tr></table></figure>
<p>以及在_config页面修改&#x2F;添加:</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Writing</span></span><br><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 以下为添加内容</span></span><br><span class="line"><span class="attr">marked:</span></span><br><span class="line">  <span class="attr">prependRoot:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">postAsset:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<p>这部分修改可以使创建博客时自动创建同名文件夹用于存放图片, 并可以通过以下形式在本地和网页中正常引用图片:<br><img src="/2023/06/12/%E5%BB%BA%E7%AB%99%E8%AE%B0%E5%BD%95/../%E5%BB%BA%E7%AB%99%E8%AE%B0%E5%BD%95/image-5.png" alt="Alt text"><br>同时, 如果md编辑器是VSCode的话, 还需进行如下设置, 保证向文本中copy图片可以直接保存到同名文件夹下:<br><img src="/2023/06/12/%E5%BB%BA%E7%AB%99%E8%AE%B0%E5%BD%95/../%E5%BB%BA%E7%AB%99%E8%AE%B0%E5%BD%95/image-1.png" alt="Alt text"><br>准备工作完成后, 就可通过此命令创建博客了, 命令将在Blog&#x2F;source&#x2F;_post下创建HelloWorld.md文件和同名文件夹.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hexo new <span class="string">&quot;HelloWorld&quot;</span></span></span><br></pre></td></tr></table></figure>
<p>之后就可以进行第一次的生成与推送:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hexo g</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hexo d</span></span><br></pre></td></tr></table></figure>
<p>常用Hexo命令:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">生成public文件夹</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hexo generate</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hexo g <span class="comment">#简写</span></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">向github推送</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hexo deploy</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hexo d <span class="comment">#简写</span></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">本地预览网站</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hexo server</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hexo s <span class="comment">#简写</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hexo s --debug <span class="comment">#debug状态下本地预览网站</span></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">新建文章</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hexo new <span class="string">&quot;postName&quot;</span></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">新建页面(后续演示)</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hexo new page <span class="string">&quot;postName&quot;</span></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">生成并本地预览</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hexo s -g</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">生成并推送</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hexo d -g</span></span><br></pre></td></tr></table></figure>

<h1 id="Next主题配置"><a href="#Next主题配置" class="headerlink" title="Next主题配置"></a>Next主题配置</h1><h2 id="安装与配置Next"><a href="#安装与配置Next" class="headerlink" title="安装与配置Next"></a>安装与配置Next</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> D:/Workspace/Blog</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">clone</span> https://github.com/next-theme/hexo-theme-next themes/next</span></span><br></pre></td></tr></table></figure>
<p>在Hexo目录下的_config.yml(hexo config)中添加配置:<br><img src="/2023/06/12/%E5%BB%BA%E7%AB%99%E8%AE%B0%E5%BD%95/../%E5%BB%BA%E7%AB%99%E8%AE%B0%E5%BD%95/image-4.png" alt="Alt text"><br>切换主题:<br><img src="/2023/06/12/%E5%BB%BA%E7%AB%99%E8%AE%B0%E5%BD%95/../%E5%BB%BA%E7%AB%99%E8%AE%B0%E5%BD%95/image-9.png" alt="Alt text"></p>
<h2 id="添加博客头像、背景与透明"><a href="#添加博客头像、背景与透明" class="headerlink" title="添加博客头像、背景与透明"></a>添加博客头像、背景与透明</h2><p>将博客头像保存在在Blog&#x2F;themes&#x2F;next&#x2F;source&#x2F;uploads下, 然后在themes&#x2F;next目录下的_config.yml(主题config)中配置:<br><img src="/2023/06/12/%E5%BB%BA%E7%AB%99%E8%AE%B0%E5%BD%95/../%E5%BB%BA%E7%AB%99%E8%AE%B0%E5%BD%95/image-8.png" alt="Alt text"><br>将网站的背景图片保存在Blog&#x2F;source&#x2F;images下;<br>在Blog&#x2F;source下新建文件夹_data, 并创建文件styles.styl:</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="string">//背景图片设置</span></span><br><span class="line"><span class="string">body</span> &#123;</span><br><span class="line">    <span class="attr">background-image:</span> <span class="string">url(/images/background.jpg);</span></span><br><span class="line">    <span class="attr">background-repeat:</span> <span class="literal">no</span><span class="string">-repeat;</span></span><br><span class="line">    <span class="attr">background-attachment:</span> <span class="string">fixed;</span></span><br><span class="line">    <span class="attr">background-size:</span> <span class="string">cover;</span></span><br><span class="line">    <span class="attr">background-position:</span> <span class="string">center;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="string">//整体透明</span></span><br><span class="line"><span class="string">:root</span> &#123;</span><br><span class="line">  <span class="string">--content-bg-color:</span> <span class="string">rgba(255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.8</span><span class="string">);</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="string">//文章背板的颜色rgb</span></span><br><span class="line"><span class="string">.main-inner</span> <span class="string">&gt;</span> <span class="string">.sub-menu,</span> <span class="string">.main-inner</span> <span class="string">&gt;</span> <span class="string">.post-block,</span> <span class="string">.main-inner</span> <span class="string">&gt;</span> <span class="string">.tabs-comment,</span> <span class="string">.main-inner</span> <span class="string">&gt;</span> <span class="string">.comments,</span> <span class="string">.main-inner</span> <span class="string">&gt;</span> </span><br><span class="line"><span class="string">.pagination&#123;</span> <span class="string">&#125;</span></span><br><span class="line"><span class="string">//主体字体颜色</span></span><br><span class="line"><span class="string">body&#123;</span>                               </span><br><span class="line">  <span class="attr">color:</span> <span class="string">rgba(0,</span> <span class="number">0</span><span class="string">,</span> <span class="number">0</span><span class="string">,</span> <span class="number">1</span><span class="string">);</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">//文章标题颜色</span></span><br><span class="line"><span class="string">.posts-expand</span> <span class="string">.post-title-link</span> &#123;    </span><br><span class="line">    <span class="attr">color:</span> <span class="string">rgba(0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span><span class="string">);</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="string">//搜索框透明</span></span><br><span class="line"><span class="string">.popup</span> &#123;        </span><br><span class="line">  <span class="attr">opacity:</span> <span class="number">0.9</span><span class="string">;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>在主题的config中配置该styl文件:<br><img src="/2023/06/12/%E5%BB%BA%E7%AB%99%E8%AE%B0%E5%BD%95/../%E5%BB%BA%E7%AB%99%E8%AE%B0%E5%BD%95/image-10.png" alt="Alt text"></p>
<h2 id="添加菜单"><a href="#添加菜单" class="headerlink" title="添加菜单"></a>添加菜单</h2><p>在主题的config中取消相应菜单的注释:<br><img src="/2023/06/12/%E5%BB%BA%E7%AB%99%E8%AE%B0%E5%BD%95/../%E5%BB%BA%E7%AB%99%E8%AE%B0%E5%BD%95/image-11.png" alt="Alt text"><br>使用<code>hexo new page</code>命令创建对应的菜单, 之后<code>hexo g</code>重新生成即可.</p>
<h2 id="修改侧边栏宽度"><a href="#修改侧边栏宽度" class="headerlink" title="修改侧边栏宽度"></a>修改侧边栏宽度</h2><p>主题config中修改width数值.<br><img src="/2023/06/12/%E5%BB%BA%E7%AB%99%E8%AE%B0%E5%BD%95/../%E5%BB%BA%E7%AB%99%E8%AE%B0%E5%BD%95/image-12.png" alt="Alt text"></p>
<h2 id="添加社交网站链接"><a href="#添加社交网站链接" class="headerlink" title="添加社交网站链接"></a>添加社交网站链接</h2><p><img src="/2023/06/12/%E5%BB%BA%E7%AB%99%E8%AE%B0%E5%BD%95/../%E5%BB%BA%E7%AB%99%E8%AE%B0%E5%BD%95/image-13.png" alt="Alt text"></p>
<h2 id="添加搜索功能"><a href="#添加搜索功能" class="headerlink" title="添加搜索功能"></a>添加搜索功能</h2><p>Blog根目录下命令行安装插件:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">npm install hexo-generator-searchdb --save</span></span><br></pre></td></tr></table></figure>
<p>主题config中设置:<br><img src="/2023/06/12/%E5%BB%BA%E7%AB%99%E8%AE%B0%E5%BD%95/../%E5%BB%BA%E7%AB%99%E8%AE%B0%E5%BD%95/image-14.png" alt="Alt text"><br>hexo的config中添加配置:<br><img src="/2023/06/12/%E5%BB%BA%E7%AB%99%E8%AE%B0%E5%BD%95/../%E5%BB%BA%E7%AB%99%E8%AE%B0%E5%BD%95/image-15.png" alt="Alt text"><br>之后重新生成.</p>
<h2 id="添加文章字数与阅读时长统计"><a href="#添加文章字数与阅读时长统计" class="headerlink" title="添加文章字数与阅读时长统计"></a>添加文章字数与阅读时长统计</h2><p>Blog根目录下命令行安装插件:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">npm install hexo-symbols-count-time --save</span></span><br></pre></td></tr></table></figure>
<p>hexo的config中添加设置:<br><img src="/2023/06/12/%E5%BB%BA%E7%AB%99%E8%AE%B0%E5%BD%95/../%E5%BB%BA%E7%AB%99%E8%AE%B0%E5%BD%95/image-16.png" alt="Alt text"><br>主题的config中设置:<br><img src="/2023/06/12/%E5%BB%BA%E7%AB%99%E8%AE%B0%E5%BD%95/../%E5%BB%BA%E7%AB%99%E8%AE%B0%E5%BD%95/image-17.png" alt="Alt text"><br>之后重新生成.</p>
<h2 id="添加网站观看人数统计"><a href="#添加网站观看人数统计" class="headerlink" title="添加网站观看人数统计"></a>添加网站观看人数统计</h2><p>主题config中设置.<br><img src="/2023/06/12/%E5%BB%BA%E7%AB%99%E8%AE%B0%E5%BD%95/../%E5%BB%BA%E7%AB%99%E8%AE%B0%E5%BD%95/image-18.png" alt="Alt text"></p>
<h2 id="添加网站图标"><a href="#添加网站图标" class="headerlink" title="添加网站图标"></a>添加网站图标</h2><p>将网站图标保存到Blog&#x2F;themes&#x2F;next&#x2F;source&#x2F;uploads下, 在主题config中设置.<br><img src="/2023/06/12/%E5%BB%BA%E7%AB%99%E8%AE%B0%E5%BD%95/../%E5%BB%BA%E7%AB%99%E8%AE%B0%E5%BD%95/image-19.png" alt="Alt text"></p>
<h2 id="添加文末版权声明"><a href="#添加文末版权声明" class="headerlink" title="添加文末版权声明"></a>添加文末版权声明</h2><p>主题config中设置.<br><img src="/2023/06/12/%E5%BB%BA%E7%AB%99%E8%AE%B0%E5%BD%95/../%E5%BB%BA%E7%AB%99%E8%AE%B0%E5%BD%95/image-20.png" alt="Alt text"></p>
<h2 id="默认展开目录"><a href="#默认展开目录" class="headerlink" title="默认展开目录"></a>默认展开目录</h2><p>主题config中设置.<br><img src="/2023/06/12/%E5%BB%BA%E7%AB%99%E8%AE%B0%E5%BD%95/../%E5%BB%BA%E7%AB%99%E8%AE%B0%E5%BD%95/image-21.png" alt="Alt text"></p>
<h1 id="博客写作功能"><a href="#博客写作功能" class="headerlink" title="博客写作功能"></a>博客写作功能</h1><h2 id="声明文章摘要"><a href="#声明文章摘要" class="headerlink" title="声明文章摘要"></a>声明文章摘要</h2><p>在想要截止的地方添加<code>&lt;!--more--&gt;</code>标记即可, 标记之上的内容便是文章的摘要.<br>方便起见可以将这个标记加入到文章模板中去.<br><img src="/2023/06/12/%E5%BB%BA%E7%AB%99%E8%AE%B0%E5%BD%95/../%E5%BB%BA%E7%AB%99%E8%AE%B0%E5%BD%95/image-22.png" alt="Alt text"></p>
<h2 id="配置自定义模板"><a href="#配置自定义模板" class="headerlink" title="配置自定义模板"></a>配置自定义模板</h2><p>每次新建的文章模板被保存在Blog&#x2F;scaffolds下, post就是’hexo new’命令创建博客时使用的模板.<br>根据需求自定义即可, 我这里添加了tag和category, 以及每篇文章都要用到的摘要标签.<br><img src="/2023/06/12/%E5%BB%BA%E7%AB%99%E8%AE%B0%E5%BD%95/../%E5%BB%BA%E7%AB%99%E8%AE%B0%E5%BD%95/image-23.png" alt="Alt text"></p>
<h2 id="文章分类与标签"><a href="#文章分类与标签" class="headerlink" title="文章分类与标签"></a>文章分类与标签</h2><p>详细规则参考:<br><a href="https://hexo.io/zh-cn/docs/front-matter">https://hexo.io/zh-cn/docs/front-matter</a></p>
<h1 id="自定义域名"><a href="#自定义域名" class="headerlink" title="自定义域名"></a>自定义域名</h1><p>这里我是通过 <a href="http://www.dynadot.com/">www.dynadot.com</a> 购买的域名.<br>首先要对域名进行dns解析, 为了白嫖Github提供的https证书, 这里需要填上四个A作为主域名连接到github提供的ip地址上, 同时用CNAME把www的子域名也给解析了.<br><img src="/2023/06/12/%E5%BB%BA%E7%AB%99%E8%AE%B0%E5%BD%95/../%E5%BB%BA%E7%AB%99%E8%AE%B0%E5%BD%95/image-6.png" alt="Alt text"><br>之后在source文件夹下创建一个CNAME文件, 注意不要加文件扩展名, 在里面输入要自定义的域名, 比如我的就是 snowylake.net :<br><img src="/2023/06/12/%E5%BB%BA%E7%AB%99%E8%AE%B0%E5%BD%95/../%E5%BB%BA%E7%AB%99%E8%AE%B0%E5%BD%95/image-3.png" alt="Alt text"><br>之后执行hexo d -g, 生成并提交.<br>进入github repo页面, 点击setting找到pages, 将域名输入到Custom domain中, 点击save.<br>同时github还将自动为你的域名申请https证书, 等待片刻后即可勾选Enforce HTTPS.<br><img src="/2023/06/12/%E5%BB%BA%E7%AB%99%E8%AE%B0%E5%BD%95/../%E5%BB%BA%E7%AB%99%E8%AE%B0%E5%BD%95/image-7.png" alt="Alt text"></p>
<h1 id="搜索引擎索引"><a href="#搜索引擎索引" class="headerlink" title="搜索引擎索引"></a>搜索引擎索引</h1><h2 id="添加索引"><a href="#添加索引" class="headerlink" title="添加索引"></a>添加索引</h2><p>需要为搜索引擎添加索引, 才能让网站被各大搜索引擎所收录.<br>登录<a href="https://search.google.com/search-console">https://search.google.com/search-console</a>, 输入网站地址, 选择HTML验证.<br>将下载的HTML文件拷贝到source文件夹, <code>hexo g</code>, 之后再进入public文件夹, 这时public文件夹中生成的HTML文件是错误的, 需要手动将source文件夹中正确的内容拷过去, 之后再执行<code>hexo d</code>即可通过验证.<br>Bing端的索引信息在Google完成后可以同步过来, 不需要重复操作.</p>
<h2 id="生成网站地图"><a href="#生成网站地图" class="headerlink" title="生成网站地图"></a>生成网站地图</h2><p>Blog根目录下执行命令:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">npm install hexo-generator-sitemap --save</span></span><br></pre></td></tr></table></figure>
<p>之后每次生成都会生成新的sitemap.</p>
]]></content>
      <categories>
        <category>Others</category>
        <category>技术随笔</category>
      </categories>
      <tags>
        <tag>技术随笔</tag>
      </tags>
  </entry>
</search>
